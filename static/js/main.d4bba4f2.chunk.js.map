{"version":3,"sources":["pages/SearchPage/SearchPage.module.scss","pages/MoviePage/MoviePage.module.scss","components/Header/Header.module.scss","components/MoviesList/MoviesList.module.scss","components/MovieCard/MovieCard.module.scss","App.module.scss","assets/logo.svg","components/Header/Header.jsx","redux/selectors.js","redux/types.js","api/api.js","redux/actions.js","components/MovieCard/MovieCard.jsx","components/MoviesList/MoviesList.jsx","pages/Landing/Landing.jsx","components/common/Loader/Loader.jsx","pages/MoviePage/MoviePage.jsx","pages/SearchPage/SearchPage.jsx","App.js","reportWebVitals.js","redux/rootReducer.js","redux/store.js","index.js"],"names":["module","exports","Header","setViewSearch","viewSearch","className","styles","header","wrapper","navBar","to","src","logo","alt","search","getPopularMovies","state","popularMovies","getPopularTv","popularTv","getTopRatedMovies","topRatedMovies","getMoviePage","moviePage","getTvPage","tvPage","getSearchedMovies","searchedMovies","getSearchedTv","searchedTv","getSearchValue","searchValue","getPageCounter","pageCounter","getIsFound","isFound","getIsFetching","isFetching","getConfig","config","GET_POPULAR_MOVIES","GET_POPULAR_TV","GET_MOVIE","GET_TV","CLEAR_MOVIE_PAGE","GET_TOP_RATED_MOVIES","SEARCH_MOVIES","SEARCH_TV","CLEAR_SEARCHED_MOVIES","CLEAR_SEARCHED_TV","UPDATE_SEARCH_VALUE","UPDATE_PAGE_COUNTER","CLEAR_PAGE_COUNTER","SET_NOT_FOUND","TOGGLE_IS_FETCHING","SET_CONFIG","API_KEY","LANGUAGE_RU","instance","axios","create","baseURL","tmdbAPI","page","get","then","res","data","id","adult","query","updateSearchValue","payload","type","updatePageCounter","clearSearchedMovies","setNotFound","toggleIsFetching","searchTv","dispatch","a","tv","results","length","searchMovies","movies","MovieCard","item","useSelector","useDispatch","card","onClick","images","secure_base_url","poster_sizes","poster_path","title","name","Date","release_date","toLocaleDateString","first_air_date","MoviesList","map","m","Landing","Loader","withRouter","props","useEffect","match","params","movie","requestMovie","requestTv","background","profile_sizes","backdrop_path","info","getFullYear","genres","g","votes","vote_average","toFixed","vote_count","tagline","overview","SearchPage","useState","checked","setChecked","mode","setMode","viewButton","setViewButton","onSearch","trim","input","searchMode","active","onKeyUp","event","key","value","onChange","e","text","target","placeholder","htmlFor","disabled","pageNumber","App","popular","topRated","requestTopRatedMovies","requestPopularTv","app","exact","path","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","rootReducer","action","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.d4bba4f2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"search\":\"SearchPage_search__2wrUc\",\"input\":\"SearchPage_input__cs5aj\",\"searchMode\":\"SearchPage_searchMode__2FRAt\",\"mode\":\"SearchPage_mode__2OUAn\",\"active\":\"SearchPage_active__fArti\",\"adult\":\"SearchPage_adult___OSF0\",\"results\":\"SearchPage_results__HJyL2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviePage\":\"MoviePage_moviePage__26sas\",\"wrapper\":\"MoviePage_wrapper__3-iT1\",\"background\":\"MoviePage_background__1dLwe\",\"movie\":\"MoviePage_movie__2faz0\",\"poster\":\"MoviePage_poster__2sMk9\",\"info\":\"MoviePage_info__gcSKj\",\"genres\":\"MoviePage_genres__DdQ66\",\"votes\":\"MoviePage_votes__KnvZz\",\"tagline\":\"MoviePage_tagline__18Hvk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2s5SP\",\"wrapper\":\"Header_wrapper__3LEv3\",\"search\":\"Header_search__1kl5y\",\"navBar\":\"Header_navBar__3w5aW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"MoviesList_wrapper__dbooU\",\"movies\":\"MoviesList_movies__t_7pg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"MovieCard_card__3Dao5\",\"emergence\":\"MovieCard_emergence__3mXEo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__HOOsG\"};","export default __webpack_public_path__ + \"static/media/logo.bf7f470b.svg\";","import React from 'react'\r\nimport logo from '../../assets/logo.svg'\r\nimport styles from './Header.module.scss'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst Header = ({setViewSearch, viewSearch}) => {\r\n  return (\r\n      <header className={styles.header}>\r\n        <div className={styles.wrapper}>\r\n          <nav className={styles.navBar}>\r\n            <NavLink to='/'><img src={logo} alt=\"\"/></NavLink>\r\n          </nav>\r\n          <NavLink to='/search'><span className={`material-icons ${styles.search}`}>search</span></NavLink>\r\n        </div>\r\n      </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","export const getPopularMovies = state => state.popularMovies\r\nexport const getPopularTv = state => state.popularTv\r\nexport const getTopRatedMovies = state => state.topRatedMovies\r\nexport const getMoviePage = state => state.moviePage\r\nexport const getTvPage = state => state.tvPage\r\nexport const getSearchedMovies = state => state.searchedMovies\r\nexport const getSearchedTv = state => state.searchedTv\r\nexport const getSearchValue = state => state.searchValue\r\nexport const getPageCounter = state => state.pageCounter\r\nexport const getIsFound = state => state.isFound\r\nexport const getIsFetching = state => state.isFetching\r\nexport const getConfig = state => state.config\r\n","export const GET_POPULAR_MOVIES = 'GET_POPULAR_MOVIES'\r\nexport const GET_POPULAR_TV = 'GET_POPULAR_TV'\r\nexport const GET_MOVIE = 'GET_MOVIE'\r\nexport const GET_TV = 'GET_TV'\r\nexport const CLEAR_MOVIE_PAGE = 'CLEAR_MOVIE_PAGE'\r\nexport const GET_TOP_RATED_MOVIES = 'GET_TOP_RATED_MOVIES'\r\nexport const SEARCH_MOVIES = 'SEARCH_MOVIES'\r\nexport const SEARCH_TV = 'SEARCH_TV'\r\nexport const CLEAR_SEARCHED_MOVIES = 'CLEAR_SEARCHED_MOVIES'\r\nexport const CLEAR_SEARCHED_TV = 'CLEAR_SEARCHED_TV'\r\nexport const UPDATE_SEARCH_VALUE = 'UPDATE_SEARCH_VALUE'\r\nexport const UPDATE_PAGE_COUNTER = 'UPDATE_PAGE_COUNTER'\r\nexport const CLEAR_PAGE_COUNTER = 'CLEAR_PAGE_COUNTER'\r\nexport const SET_NOT_FOUND = 'SET_NOT_FOUND'\r\nexport const TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING'\r\nexport const SET_CONFIG = 'SET_CONFIG'\r\n","import axios from 'axios';\r\n\r\nconst API_KEY = 'api_key=aee2215c6411642a540bd3f9007fa7fd'\r\nconst LANGUAGE_RU = 'language=ru-RU'\r\n\r\nconst instance = axios.create({\r\n  baseURL: 'https://api.themoviedb.org/3'\r\n})\r\nexport const tmdbAPI = {\r\n  requestPopularMovies(page = 1) {\r\n    return instance.get(`/movie/popular?${API_KEY}&${LANGUAGE_RU}&page=${page}`).then(res => res.data)\r\n  },\r\n  requestPopularTv(page = 1) {\r\n    return instance.get(`/tv/popular?${API_KEY}&${LANGUAGE_RU}&page=${page}`).then(res => res.data)\r\n  },\r\n  requestTopRatedMovies(page = 1) {\r\n    return instance.get(`/movie/top_rated?${API_KEY}&${LANGUAGE_RU}&page=${page}`).then(res => res.data)\r\n  },\r\n  requestMovie(id) {\r\n    return instance.get(`/movie/${id}?${API_KEY}&${LANGUAGE_RU}`).then(res => res.data)\r\n  },\r\n  requestTv(id) {\r\n    return instance.get(`/tv/${id}?${API_KEY}&${LANGUAGE_RU}`).then(res => res.data)\r\n  },\r\n  searchMovies(adult = false, query = '', page = 1) {\r\n    return instance.get(`/search/movie/?${API_KEY}&${LANGUAGE_RU}&include_adult=${adult}&query=${query}&page=${page}`).then(res => res.data)\r\n  },\r\n  searchTv(adult = false, query = '', page = 1) {\r\n    return instance.get(`/search/tv/?${API_KEY}&${LANGUAGE_RU}&include_adult=${adult}&query=${query}&page=${page}`).then(res => res.data)\r\n  },\r\n  requestConfigAPI() {\r\n    return instance.get(`/configuration?${API_KEY}`).then(res => res.data)\r\n  },\r\n}\r\n","import {\r\n  SET_CONFIG,\r\n  GET_POPULAR_MOVIES,\r\n  GET_TOP_RATED_MOVIES,\r\n  GET_POPULAR_TV,\r\n  GET_MOVIE,\r\n  CLEAR_MOVIE_PAGE,\r\n  GET_TV,\r\n  SEARCH_MOVIES,\r\n  CLEAR_SEARCHED_MOVIES,\r\n  UPDATE_SEARCH_VALUE,\r\n  UPDATE_PAGE_COUNTER,\r\n  CLEAR_PAGE_COUNTER, SET_NOT_FOUND, TOGGLE_IS_FETCHING, SEARCH_TV, CLEAR_SEARCHED_TV\r\n} from './types';\r\nimport {tmdbAPI} from '../api/api';\r\n\r\nexport const clearMoviePage = () => ({type: CLEAR_MOVIE_PAGE})\r\nexport const updateSearchValue = (payload) => ({type: UPDATE_SEARCH_VALUE, payload})\r\nexport const updatePageCounter = () => ({type: UPDATE_PAGE_COUNTER})\r\nexport const clearPageCounter = () => ({type: CLEAR_PAGE_COUNTER})\r\nexport const clearSearchedMovies = () => ({type: CLEAR_SEARCHED_MOVIES})\r\nexport const clearSearchedTv = () => ({type: CLEAR_SEARCHED_TV})\r\nexport const setNotFound = (payload) => ({type: SET_NOT_FOUND, payload})\r\nexport const toggleIsFetching = (payload) => ({type: TOGGLE_IS_FETCHING, payload})\r\nconst requestPopularMoviesSuccess = payload => ({type: GET_POPULAR_MOVIES, payload})\r\nconst requestPopularTvSuccess = payload => ({type: GET_POPULAR_TV, payload})\r\nconst requestTopRatedMoviesSuccess = payload => ({type: GET_TOP_RATED_MOVIES, payload})\r\nconst requestMovieSuccess = payload => ({type: GET_MOVIE, payload})\r\nconst requestTvSuccess = payload => ({type: GET_TV, payload})\r\nconst searchMoviesSuccess = payload => ({type: SEARCH_MOVIES, payload})\r\nconst searchTvSuccess = payload => ({type: SEARCH_TV, payload})\r\nconst requestConfigSuccess = (payload) => ({type: SET_CONFIG, payload})\r\n\r\nexport const requestPopularMovies = (page) => async dispatch => {\r\n  const popular = await tmdbAPI.requestPopularMovies(page)\r\n  dispatch(requestPopularMoviesSuccess(popular.results))\r\n}\r\n\r\nexport const searchTv = (adult, query, page) => async dispatch => {\r\n  dispatch(toggleIsFetching(true))\r\n  const tv = await tmdbAPI.searchTv(adult, query, page)\r\n  if (tv.results.length) {\r\n    dispatch(searchTvSuccess(tv.results))\r\n    dispatch(setNotFound(true))\r\n  } else {\r\n    dispatch(setNotFound(false))\r\n  }\r\n  dispatch(toggleIsFetching(false))\r\n}\r\n\r\nexport const searchMovies = (adult, query, page) => async dispatch => {\r\n  dispatch(toggleIsFetching(true))\r\n  const movies = await tmdbAPI.searchMovies(adult, query, page)\r\n  if (movies.results.length) {\r\n    dispatch(searchMoviesSuccess(movies.results))\r\n    dispatch(setNotFound(true))\r\n  } else {\r\n    dispatch(setNotFound(false))\r\n  }\r\n  dispatch(toggleIsFetching(false))\r\n}\r\nexport const requestMovie = (id) => async dispatch => {\r\n  const movie = await tmdbAPI.requestMovie(id)\r\n  dispatch(requestMovieSuccess(movie))\r\n}\r\n\r\nexport const requestTv = (id) => async dispatch => {\r\n  const tv = await tmdbAPI.requestTv(id)\r\n  dispatch(requestTvSuccess(tv))\r\n}\r\n\r\nexport const requestPopularTv = (page) => async dispatch => {\r\n  const popular = await tmdbAPI.requestPopularTv(page)\r\n  dispatch(requestPopularTvSuccess(popular.results))\r\n}\r\n\r\nexport const requestTopRatedMovies = (page) => async dispatch => {\r\n  const topRated = await tmdbAPI.requestTopRatedMovies(page)\r\n  dispatch(requestTopRatedMoviesSuccess(topRated.results))\r\n}\r\n\r\nexport const requestConfig = () => async dispatch => {\r\n  const config = await tmdbAPI.requestConfigAPI()\r\n  dispatch(requestConfigSuccess(config))\r\n}\r\n\r\n","import React from 'react'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {getConfig} from '../../redux/selectors';\r\nimport styles from './MovieCard.module.scss'\r\nimport {clearMoviePage} from '../../redux/actions';\r\n\r\nconst MovieCard = ({item, type}) => {\r\n  const config = useSelector(getConfig)\r\n  const dispatch = useDispatch()\r\n  const onClear = () => {\r\n    dispatch(clearMoviePage())\r\n  }\r\n  return (\r\n      <div className={styles.card} onClick={onClear}>\r\n        <img src={`${config.images.secure_base_url}${config.images.poster_sizes[4]}${item.poster_path}`} alt=\"movie\"/>\r\n        <h3>{type === 'movie' ? item.title : item.name}</h3>\r\n        <span>{\r\n          type === 'movie'\r\n              ? new Date(item.release_date).toLocaleDateString()\r\n              : new Date(item.first_air_date).toLocaleDateString()}\r\n        </span>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default MovieCard\r\n","import React from 'react'\r\nimport styles from './MoviesList.module.scss'\r\nimport MovieCard from '../MovieCard/MovieCard'\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst MoviesList = ({movies, title, type}) => {\r\n  return (\r\n        <div className={styles.wrapper}>\r\n          <h2>{title}</h2>\r\n          <div className={styles.movies}>{movies.map(m => <NavLink key={m.id} to={type === 'movie' ? `movie/${m.id}` : `tv/${m.id}`}>\r\n            <MovieCard\r\n              key={m.id}\r\n              item={m}\r\n              type={type}\r\n          /></NavLink>)}</div>\r\n        </div>\r\n  )\r\n}\r\n\r\nexport default MoviesList\r\n","import React from 'react'\r\nimport {useSelector} from 'react-redux';\r\nimport {getPopularMovies, getPopularTv, getTopRatedMovies} from '../../redux/selectors';\r\nimport MoviesList from '../../components/MoviesList/MoviesList';\r\n\r\n\r\nconst Landing = () => {\r\n  const popularMovies = useSelector(getPopularMovies)\r\n  const popularTv = useSelector(getPopularTv)\r\n  const topRatedMovies = useSelector(getTopRatedMovies)\r\n  return (\r\n      <>\r\n        <MoviesList movies={popularMovies} title={'Популярные фильмы'} type='movie'/>\r\n        <MoviesList movies={popularTv} title={'Популярные сериалы'} type='tv'/>\r\n        <MoviesList movies={topRatedMovies} title={'В тренде'} type='movie'/>\r\n      </>\r\n  )\r\n}\r\n\r\nexport default Landing\r\n","import React from 'react'\r\nimport './Loader.scss'\r\n\r\nconst Loader = () => {\r\n  return (\r\n      <div className=\"lds-ripple\">\r\n        <div/>\r\n        <div/>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default Loader\r\n","import React, {useEffect} from 'react'\r\nimport styles from './MoviePage.module.scss'\r\nimport {withRouter} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {requestMovie, requestTv} from '../../redux/actions';\r\nimport {getMoviePage, getTvPage} from '../../redux/selectors';\r\nimport Loader from '../../components/common/Loader/Loader';\r\n\r\nconst MoviePage = ({config, type, ...props}) => {\r\n  const dispatch = useDispatch()\r\n  const moviePage = useSelector(getMoviePage)\r\n  const tvPage = useSelector(getTvPage)\r\n  useEffect(() => {\r\n    const id = props.match.params.id\r\n    if (type === 'movie') dispatch(requestMovie(id))\r\n    else dispatch(requestTv(id))\r\n  }, [dispatch, props.match.params.id, type])\r\n\r\n  if ((type === 'movie' && !moviePage) || (type === 'tv' && !tvPage)) return <Loader/>\r\n  return (\r\n      <div className={styles.moviePage}>\r\n        <div className={styles.wrapper}>\r\n          <img className={styles.background}\r\n               src={`${config.images.secure_base_url}${config.images.profile_sizes[3]}${type === 'movie'\r\n                   ? moviePage.backdrop_path\r\n                   : tvPage.backdrop_path}`}\r\n               alt='movie'/>\r\n          <div className={styles.movie}>\r\n            <img src={`${config.images.secure_base_url}${config.images.profile_sizes[3]}${type === 'movie'\r\n                ? moviePage.poster_path\r\n                : tvPage.poster_path}`}\r\n                 alt=\"\"/>\r\n            <div className={styles.info}>\r\n              {type === 'movie'\r\n                  ? <h1>{moviePage.title} ({new Date(moviePage.release_date).getFullYear()})</h1>\r\n                  : <h1>{tvPage.name} ({new Date(tvPage.first_air_date).getFullYear()})</h1>}\r\n              <div className={styles.genres}>Жанры:\r\n                {type === 'movie'\r\n                    ? moviePage.genres.map(g => <span key={g.id}>{g.name};</span>)\r\n                    : tvPage.genres.map(g => <span key={g.id}>{g.name};</span>)}\r\n              </div>\r\n              <div className={styles.votes}>\r\n              <span>Оценка пользователей: {type === 'movie'\r\n                  ? moviePage.vote_average.toFixed(1)\r\n                  : tvPage.vote_average.toFixed(1)}.</span>\r\n                <span>Всего голосов: {type === 'movie' ? moviePage.vote_count : tvPage.vote_count}</span>\r\n              </div>\r\n              {type === 'movie' && moviePage.tagline &&\r\n              <p className={styles.tagline}>&laquo;{moviePage.tagline}&raquo;</p>}\r\n              {type === 'tv' && tvPage.tagline && <p className={styles.tagline}>&laquo;{tvPage.tagline}&raquo;</p>}\r\n\r\n              <h3>Обзор</h3>\r\n              <p>{type === 'movie' ? moviePage.overview : tvPage.overview}</p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default withRouter(MoviePage)\r\n","import React, {useEffect, useState} from 'react'\r\nimport styles from './SearchPage.module.scss'\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {\r\n  getIsFetching,\r\n  getIsFound,\r\n  getPageCounter,\r\n  getSearchedMovies,\r\n  getSearchedTv,\r\n  getSearchValue\r\n} from '../../redux/selectors';\r\nimport MovieCard from '../../components/MovieCard/MovieCard';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {\r\n  clearPageCounter,\r\n  clearSearchedMovies, clearSearchedTv,\r\n  searchMovies, searchTv,\r\n  updatePageCounter,\r\n  updateSearchValue\r\n} from '../../redux/actions';\r\n\r\nconst SearchPage = () => {\r\n  const dispatch = useDispatch()\r\n  const [checked, setChecked] = useState(false)\r\n  const [mode, setMode] = useState('movie')\r\n  const [viewButton, setViewButton] = useState(true)\r\n  const searchValue = useSelector(getSearchValue)\r\n  const pageCounter = useSelector(getPageCounter)\r\n  const isFound = useSelector(getIsFound)\r\n  const isFetching = useSelector(getIsFetching)\r\n  const searchedMovies = useSelector(getSearchedMovies)\r\n  const searchedTv = useSelector(getSearchedTv)\r\n\r\n  const onSearch = (page) => {\r\n    dispatch(clearSearchedMovies())\r\n    if (searchValue.trim() !== '') {\r\n      dispatch(clearPageCounter())\r\n      if (mode === 'movie') {\r\n        dispatch(searchMovies(checked, searchValue, page))\r\n      } else {\r\n        dispatch(searchTv(checked, searchValue, page))\r\n      }\r\n      setViewButton(true)\r\n      dispatch(updatePageCounter())\r\n    }\r\n  }\r\n\r\n  const loadingMore = (pageNumber) => {\r\n    dispatch(updatePageCounter())\r\n    if (mode === 'movie') {\r\n      dispatch(searchMovies(checked, searchValue, pageNumber))\r\n    } else {\r\n      dispatch(searchTv(checked, searchValue, pageNumber))\r\n    }\r\n  }\r\n  const onUpdateSearchValue = (text) => {\r\n    dispatch(updateSearchValue(text))\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (searchValue.trim() === '') {\r\n      setViewButton(false)\r\n    }\r\n  }, [searchValue])\r\n\r\n  const onMovieMode = () => {\r\n    dispatch(clearSearchedTv())\r\n    setMode('movie')\r\n    dispatch(updateSearchValue(''))\r\n  }\r\n\r\n  const onTvMode = () => {\r\n    dispatch(clearSearchedMovies())\r\n    setMode('tv')\r\n    dispatch(updateSearchValue(''))\r\n  }\r\n\r\n  return (\r\n      <div className={styles.search}>\r\n        <div className={styles.input}>\r\n          <div className={styles.searchMode}><h1>Поиск</h1>\r\n            <span\r\n                className={`${styles.mode} ${mode === 'movie' && styles.active}`}\r\n                onClick={onMovieMode}>фильмов</span>\r\n            <span\r\n                className={`${styles.mode} ${mode === 'tv' && styles.active}`}\r\n                onClick={onTvMode}>сериалов</span></div>\r\n          <span onClick={() => onSearch(pageCounter)} className={`material-icons`}>search</span>\r\n          <input onKeyUp={event => {\r\n            if (event.key === 'Enter') onSearch(pageCounter)\r\n          }}\r\n                 value={searchValue}\r\n                 onChange={(e) => onUpdateSearchValue(e.target.value)}\r\n                 type=\"text\"\r\n                 placeholder={'Введите запрос'}\r\n          />\r\n          <div className={styles.adult}>\r\n            <label htmlFor='adult'>Показывать фильмы 18+</label>\r\n            <input onChange={() => setChecked(!checked)} type=\"checkbox\" id='adult'/></div>\r\n        </div>\r\n        {isFound && viewButton && !isFetching && <h1>Результаты поиска:</h1>}\r\n\r\n        {mode === 'movie'\r\n            ? <div className={styles.results}>\r\n              {searchedMovies.map(m => <NavLink key={m.id} to={`movie/${m.id}`}>\r\n                <MovieCard\r\n                    key={m.id}\r\n                    item={m}\r\n                    type={mode}\r\n                /></NavLink>)}\r\n            </div>\r\n            : <div className={styles.results}>\r\n              {searchedTv.map(m => <NavLink key={m.id} to={`tv/${m.id}`}>\r\n                <MovieCard\r\n                    key={m.id}\r\n                    item={m}\r\n                    type={mode}\r\n                /></NavLink>)}\r\n            </div>}\r\n        {!isFound && !isFetching && <p>По данному запросу ничего не найдено!</p>}\r\n        {isFound && viewButton && !isFetching &&\r\n        <button disabled={isFetching} onClick={() => loadingMore(pageCounter)}>Загрузить еще</button>}\r\n      </div>\r\n  )\r\n}\r\n\r\nexport default SearchPage\r\n","import React, {useEffect} from 'react'\nimport Header from './components/Header/Header'\nimport Landing from './pages/Landing/Landing'\nimport {useDispatch, useSelector} from 'react-redux'\nimport styles from './App.module.scss'\nimport {requestConfig, requestPopularMovies, requestPopularTv, requestTopRatedMovies} from './redux/actions';\nimport {getConfig} from './redux/selectors';\nimport Loader from './components/common/Loader/Loader';\nimport {Route, Switch} from 'react-router-dom';\nimport MoviePage from './pages/MoviePage/MoviePage';\nimport SearchPage from './pages/SearchPage/SearchPage';\n\nconst App = () => {\n  const dispatch = useDispatch()\n  const config = useSelector(getConfig)\n\n  useEffect(() => {\n    dispatch(requestConfig())\n    dispatch(requestPopularMovies())\n    dispatch(requestTopRatedMovies())\n    dispatch(requestPopularTv())\n  }, [dispatch])\n\n  if (!config) {\n    return <Loader/>\n  }\n\n  return (\n      <div className={styles.app}>\n        <Header/>\n        <Switch>\n          <Route exact path='/' render={() => <Landing/>}/>\n          <Route path='/search' render={() => <SearchPage/>}/>\n          <Route path='/movie/:id' render={() => <MoviePage config={config} type='movie'/>}/>\n          <Route path='/tv/:id' render={() => <MoviePage config={config} type='tv'/>}/>\n        </Switch>\n      </div>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {\r\n  SET_CONFIG,\r\n  GET_POPULAR_MOVIES,\r\n  GET_TOP_RATED_MOVIES,\r\n  GET_POPULAR_TV,\r\n  GET_MOVIE,\r\n  CLEAR_MOVIE_PAGE,\r\n  GET_TV,\r\n  SEARCH_MOVIES,\r\n  CLEAR_SEARCHED_MOVIES,\r\n  UPDATE_SEARCH_VALUE,\r\n  UPDATE_PAGE_COUNTER,\r\n  CLEAR_PAGE_COUNTER, SET_NOT_FOUND, TOGGLE_IS_FETCHING, SEARCH_TV, CLEAR_SEARCHED_TV\r\n} from './types';\r\n\r\nconst initialState = {\r\n  popularMovies: [],\r\n  topRatedMovies: [],\r\n  popularTv: [],\r\n  moviePage: null,\r\n  tvPage: null,\r\n  config: null,\r\n  searchedMovies: [],\r\n  searchedTv: [],\r\n  searchValue: '',\r\n  pageCounter: 1,\r\n  isFound: true,\r\n  isFetching: false\r\n}\r\n\r\nconst rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_POPULAR_MOVIES:\r\n      return {...state, popularMovies: [...state.popularMovies, ...action.payload]}\r\n    case SET_CONFIG:\r\n      return {...state, config: action.payload}\r\n    case GET_TOP_RATED_MOVIES:\r\n      return {...state, topRatedMovies: [...state.topRatedMovies, ...action.payload]}\r\n    case GET_POPULAR_TV:\r\n      return {...state, popularTv: [...state.popularTv, ...action.payload]}\r\n    case GET_MOVIE:\r\n      return {...state, moviePage: action.payload}\r\n    case GET_TV:\r\n      return {...state, tvPage: action.payload}\r\n    case CLEAR_MOVIE_PAGE:\r\n      return {...state, moviePage: null, tvPage: null}\r\n    case SEARCH_MOVIES:\r\n      return {...state, searchedMovies: [...state.searchedMovies, ...action.payload]}\r\n    case CLEAR_SEARCHED_MOVIES:\r\n      return {...state, searchedMovies: []}\r\n    case CLEAR_SEARCHED_TV:\r\n      return {...state, searchedTv: []}\r\n    case UPDATE_SEARCH_VALUE:\r\n      return {...state, searchValue: action.payload}\r\n    case UPDATE_PAGE_COUNTER:\r\n      return {...state, pageCounter: state.pageCounter + 1}\r\n    case CLEAR_PAGE_COUNTER:\r\n      return {...state, pageCounter: 1}\r\n    case SET_NOT_FOUND:\r\n      return {...state, isFound: action.payload}\r\n    case TOGGLE_IS_FETCHING:\r\n      return {...state, isFetching: action.payload}\r\n    case SEARCH_TV:\r\n      return {...state, searchedTv: [...state.searchedTv, ...action.payload]}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default rootReducer\r\n","import {applyMiddleware, compose, createStore} from 'redux'\r\nimport thunkMiddleware from 'redux-thunk'\r\nimport rootReducer from './rootReducer';\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)))\r\n\r\nexport default store\r\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\nimport {Provider} from 'react-redux';\nimport store from './redux/store';\nimport { HashRouter} from 'react-router-dom';\n\nReactDOM.render(\n    <HashRouter basename={process.env.PUBLIC_URL}>\n      <Provider store={store}>\n        <App/>\n      </Provider>\n    </HashRouter>, document.getElementById('root')\n)\n\nreportWebVitals()\n"],"sourceRoot":""}